var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.094,1,2.226]],["body/controllers/AppController.html",[0,1.714,1,3.489,2,1.354,3,0.356,4,0.314,5,0.314,6,3.507,7,0.4,8,1.599,9,5.118,10,1.453,11,0.027,12,0.76,13,4.159,14,1.263,15,1.838,16,0.564,17,0.76,18,3.176,19,3.507,20,0.356,21,0.085,22,1.945,23,1.675,24,1.263,25,4.159,26,0.016,27,0.021,28,0.016]],["title/modules/AppModule.html",[29,1.094,30,2.226]],["body/modules/AppModule.html",[1,3.199,2,1.351,3,0.25,4,0.22,5,0.22,11,0.027,16,0.671,17,0.533,18,3.172,19,2.461,20,0.25,21,0.059,26,0.012,27,0.016,28,0.012,29,1.571,30,4.355,31,1.265,32,1.265,33,1.477,34,1.477,35,1.265,36,2.442,37,1.477,38,2.461,39,2.461,40,2.461,41,3.468,42,3.468,43,3.338,44,3.053,45,3.468,46,2.099,47,1.477,48,1.477,49,2.918,50,3.498,51,2.918,52,2.918,53,2.461,54,1.755,55,0.827,56,2.918,57,2.918,58,1.755,59,1.755,60,2.918,61,2.918,62,2.918,63,2.918,64,2.918]],["title/injectables/AppService.html",[18,1.847,65,0.887]],["body/injectables/AppService.html",[3,0.376,4,0.331,5,0.331,7,0.422,8,1.653,9,5.217,11,0.027,12,0.802,14,1.332,15,1.901,16,0.47,17,0.802,18,2.993,20,0.376,21,0.089,24,1.332,26,0.017,27,0.022,28,0.017,65,1.437,66,2.051,67,3.699,68,4.387,69,4.387,70,4.387]],["title/controllers/AuthController.html",[0,1.094,71,2.226]],["body/controllers/AuthController.html",[0,1.13,2,1.13,3,0.297,4,0.262,5,0.262,7,0.334,8,1.42,10,1.212,11,0.027,12,0.634,14,1.054,16,0.567,17,0.634,20,0.297,21,0.071,22,1.623,24,1.42,26,0.019,27,0.019,28,0.014,71,3.1,72,2.927,73,2.087,74,2.927,75,1.722,76,4.677,77,3.471,78,3.113,79,3.916,80,4.46,81,3.471,82,1.212,83,0.738,84,0.685,85,1.13,86,4.677,87,2.927,88,2.087,89,2.3,90,2.3,91,2.677,92,2.568,93,3.471,94,3.471,95,1.13,96,1.212,97,3.471,98,3.471,99,3.471,100,3.471,101,3.471]],["title/guards/AuthGuard.html",[102,2.485,103,1.847]],["body/guards/AuthGuard.html",[3,0.249,4,0.219,5,0.219,7,0.28,8,1.257,11,0.027,12,0.756,14,1.257,15,1.682,16,0.444,17,0.532,20,0.249,21,0.059,24,1.463,26,0.012,27,0.016,28,0.012,65,1.093,74,2.453,75,1.876,82,1.445,83,0.88,84,0.817,85,1.347,88,1.749,95,1.709,96,1.445,103,2.276,104,2.909,105,2.453,106,5.247,107,4.138,108,4.138,109,5.247,110,2.909,111,2.909,112,2.094,113,4.138,114,2.909,115,2.909,116,1.749,117,2.453,118,2.909,119,2.453,120,2.909,121,2.909,122,2.152,123,2.909,124,2.909,125,2.453,126,4.138,127,2.453,128,2.909,129,3.489,130,2.488,131,2.909,132,4.062,133,4.138,134,2.453,135,2.909,136,4.138,137,2.909,138,2.152,139,2.909,140,2.909,141,2.909,142,2.909,143,2.909,144,2.909,145,2.909]],["title/modules/AuthModule.html",[29,1.094,41,2.019]],["body/modules/AuthModule.html",[2,1.432,3,0.272,4,0.239,5,0.239,11,0.027,16,0.651,17,0.58,20,0.272,21,0.064,26,0.013,27,0.017,28,0.013,29,1.643,31,1.374,32,1.374,33,1.604,34,1.604,35,1.374,36,2.554,37,1.604,41,3.827,44,3.257,46,2.225,47,1.604,48,1.604,50,3.707,71,3.345,75,1.032,91,2.897,92,2.346,116,1.906,122,2.346,138,2.346,146,2.674,147,2.674,148,3.171,149,3.442,150,3.171,151,3.171,152,2.346,153,3.171,154,2.346,155,3.171,156,3.171,157,3.171,158,3.171,159,3.171,160,3.171,161,3.171,162,3.171,163,3.171,164,3.171]],["title/injectables/AuthService.html",[65,0.887,91,1.7]],["body/injectables/AuthService.html",[3,0.186,4,0.163,5,0.163,7,0.208,8,1.01,11,0.027,12,0.896,14,1.38,16,0.555,17,0.396,20,0.186,21,0.044,22,1.012,24,1.489,26,0.009,27,0.013,28,0.009,65,0.878,66,1.012,75,1.857,78,2.498,82,1.712,83,1.043,84,0.799,85,1.596,89,1.435,90,1.435,91,1.683,95,1.083,96,1.587,112,2.619,116,1.999,122,2.996,125,2.804,130,1.302,132,2.804,152,1.602,165,1.602,166,3.326,167,3.326,168,3.326,169,3.326,170,1.191,171,2.165,172,2.299,173,5.389,174,2.165,175,3.326,176,3.326,177,2.684,178,2.165,179,2.125,180,3.326,181,2.165,182,3.326,183,1.602,184,3.326,185,2.947,186,2.165,187,1.826,188,3.326,189,2.165,190,2.165,191,1.826,192,1.826,193,2.165,194,1.435,195,1.302,196,1.602,197,1.302,198,3.326,199,2.165,200,2.165,201,2.165,202,4.049,203,3.326,204,3.326,205,3.326,206,2.165,207,2.165,208,2.165,209,3.326,210,2.165,211,1.096,212,2.165,213,1.302,214,2.165,215,2.165,216,2.165,217,2.165,218,2.165,219,2.165,220,2.165,221,2.165,222,2.165,223,2.165,224,2.165,225,2.165,226,2.165]],["title/classes/CreateUserDto.html",[21,0.068,227,2.019]],["body/classes/CreateUserDto.html",[3,0.295,4,0.26,5,0.26,7,0.332,11,0.026,12,1.11,15,1.97,16,0.369,20,0.295,21,0.07,23,2.648,26,0.014,27,0.018,28,0.014,84,1.199,177,3.492,227,2.797,228,1.61,229,5.235,230,2.548,231,2.017,232,2.897,233,4.442,234,3.898,235,3.492,236,1.492,237,2.558,238,2.904,239,3.083,240,3.444,241,2.904,242,3.898,243,3.444,244,3.444,245,3.444,246,2.904]],["title/interfaces/IlogData.html",[247,2.019,248,2.226]],["body/interfaces/IlogData.html",[3,0.229,4,0.202,5,0.202,7,0.257,11,0.026,15,2.37,20,0.229,26,0.011,27,0.015,28,0.011,84,1.272,85,2.21,231,1.687,247,1.606,248,2.579,249,1.976,250,2.252,251,4.591,252,4.591,253,4.591,254,4.591,255,4.591,256,4.591,257,4.591,258,4.591,259,4.591,260,4.591,261,4.591,262,4.591,263,4.591,264,4.591,265,4.591,266,2.671,267,2.671,268,2.671,269,2.671,270,2.671,271,2.671,272,2.671,273,2.671,274,2.671,275,2.671,276,2.671,277,2.671,278,2.671,279,2.671,280,2.671]],["title/interfaces/JwtPayload.html",[185,2.019,247,2.019]],["body/interfaces/JwtPayload.html",[3,0.356,4,0.314,5,0.314,7,0.4,11,0.026,15,2.187,20,0.356,26,0.016,27,0.021,28,0.016,84,1.198,183,3.895,185,3.165,211,3.072,213,3.472,231,2.282,234,4.273,235,4.023,247,2.501,249,3.078,281,3.507,282,3.507,283,4.159,284,4.159]],["title/injectables/JwtStrategy.html",[65,0.887,149,2.019]],["body/injectables/JwtStrategy.html",[3,0.274,4,0.241,5,0.241,7,0.307,8,1.342,11,0.027,12,0.808,14,0.97,16,0.615,17,0.584,20,0.274,21,0.065,22,1.493,24,0.97,26,0.013,27,0.017,28,0.013,65,1.167,66,1.493,75,1.65,82,1.543,83,0.94,84,0.872,85,1.439,91,3.004,92,2.363,95,1.04,96,1.115,116,1.92,119,2.693,129,2.693,130,1.92,138,2.363,149,2.657,154,2.363,170,1.756,179,2.196,185,3.287,187,2.693,191,2.693,192,2.693,285,2.693,286,4.419,287,3.194,288,3.194,289,4.419,290,3.194,291,4.419,292,3.194,293,3.194,294,2.693,295,3.194,296,1.756,297,3.194,298,3.194,299,3.194,300,3.194,301,3.194,302,3.194,303,3.194,304,3.194,305,3.194]],["title/classes/LogRequest.html",[21,0.068,306,1.847]],["body/classes/LogRequest.html",[3,0.276,4,0.243,5,0.243,7,0.31,10,1.915,11,0.027,12,1.002,15,1.551,16,0.588,20,0.381,21,0.065,26,0.013,27,0.018,28,0.013,55,0.911,84,1.136,95,1.048,228,1.504,231,1.925,232,2.797,237,2.442,248,3.371,296,2.442,306,2.442,307,2.38,308,3.058,309,4.288,310,5.086,311,2.694,312,3.736,313,3.217,314,3.217,315,3.217,316,2.132,317,2.38,318,3.286,319,3.217,320,2.442,321,1.934,322,1.769,323,1.296,324,3.217,325,1.769,326,3.217,327,1.769,328,2.132,329,2.713]],["title/classes/LoginDto.html",[21,0.068,78,1.847]],["body/classes/LoginDto.html",[3,0.351,4,0.309,5,0.309,7,0.395,10,1.822,11,0.026,12,0.954,15,2.109,16,0.44,20,0.351,21,0.106,26,0.016,27,0.021,28,0.016,78,2.869,84,1.03,89,3.803,177,3.803,228,1.918,230,3.035,231,2.261,235,3.803,238,3.458,241,3.458,330,6.235,331,3.458]],["title/controllers/LogrequestController.html",[0,1.094,332,2.226]],["body/controllers/LogrequestController.html",[0,1.172,2,1.172,3,0.308,4,0.272,5,0.272,7,0.346,8,1.455,10,1.257,11,0.027,12,0.658,14,1.093,16,0.578,17,0.658,20,0.308,21,0.073,22,1.683,23,1.449,24,1.093,26,0.014,27,0.019,28,0.014,73,2.163,75,1.754,79,3.57,82,1.257,83,0.766,85,1.172,88,2.163,95,1.172,96,1.257,103,1.979,306,1.979,332,3.176,333,3.034,334,4.791,335,3.598,336,3.986,337,4.791,338,3.598,339,3.034,340,3.598,341,2.663,342,2.663,343,2.962,344,3.034,345,3.598,346,2.663,347,3.598,348,3.598,349,2.663,350,3.598,351,3.598,352,3.598]],["title/modules/LogrequestModule.html",[29,1.094,42,2.019]],["body/modules/LogrequestModule.html",[2,1.507,3,0.293,4,0.258,5,0.258,11,0.027,16,0.664,17,0.625,20,0.293,21,0.069,26,0.014,27,0.018,28,0.014,29,1.709,31,1.481,32,1.481,33,1.729,34,1.729,35,1.481,36,2.655,37,1.729,42,3.643,46,2.342,47,1.729,48,1.729,54,2.054,55,0.968,83,1.116,236,0.968,306,1.879,311,1.481,325,1.879,328,2.265,332,3.478,343,3.332,344,2.881,353,2.881,354,2.881,355,3.417,356,2.881,357,2.265,358,1.376,359,1.598,360,3.417,361,2.265,362,2.881,363,2.881,364,3.417,365,3.417,366,2.265,367,2.528]],["title/injectables/LogrequestService.html",[65,0.887,343,1.847]],["body/injectables/LogrequestService.html",[3,0.248,4,0.219,5,0.219,7,0.279,8,1.254,11,0.027,12,0.755,14,0.88,16,0.617,17,0.53,20,0.248,21,0.059,23,1.936,24,1.254,26,0.011,27,0.016,28,0.011,55,0.821,65,1.09,66,1.356,75,1.566,82,1.442,83,0.878,84,0.815,85,1.344,96,1.83,112,2.089,170,1.594,197,2.891,213,1.743,236,1.362,306,1.594,311,1.79,322,1.594,323,1.168,327,2.881,339,3.481,343,2.27,356,2.445,357,1.922,359,1.356,368,2.445,369,4.129,370,2.899,371,4.141,372,4.808,373,3.187,374,2.899,375,4.129,376,4.129,377,2.899,378,1.922,379,2.445,380,2.899,381,1.922,382,2.899,383,2.145,384,2.899,385,4.129,386,2.899,387,2.445,388,4.129,389,2.899,390,2.899]],["title/classes/ServerConfig.html",[21,0.068,391,1.7]],["body/classes/ServerConfig.html",[3,0.218,4,0.192,5,0.192,7,0.245,10,2.119,11,0.027,12,1.109,15,2.174,16,0.479,20,0.322,21,0.052,26,0.01,27,0.015,28,0.01,55,0.721,83,0.95,84,1.215,95,0.829,228,1.191,231,1.629,232,2.456,236,1.559,237,2.067,239,3.268,296,2.067,308,2.685,312,3.951,316,1.688,317,1.885,318,2.781,320,2.067,321,1.531,322,1.401,323,1.026,327,1.401,358,1.026,391,1.902,392,1.885,393,4.467,394,4.467,395,4.467,396,4.467,397,3.766,398,3.766,399,4.467,400,2.547,401,2.547,402,2.547,403,2.547,404,2.547,405,2.547,406,2.547,407,2.547,408,2.547,409,2.547,410,1.885,411,2.148,412,1.531,413,2.148]],["title/controllers/ServerConfigController.html",[0,1.094,414,2.226]],["body/controllers/ServerConfigController.html",[0,0.997,2,0.997,3,0.262,4,0.231,5,0.231,7,0.295,8,1.303,10,1.498,11,0.027,12,0.784,14,1.303,16,0.531,17,0.559,20,0.262,21,0.062,22,1.431,23,1.233,24,1.303,26,0.012,27,0.017,28,0.012,58,3.227,59,2.977,73,1.84,75,1.907,79,3.282,82,1.498,83,0.913,85,1.397,88,1.84,95,1.397,96,1.498,103,1.683,211,1.549,336,4.334,341,2.265,342,2.265,346,2.265,349,3.174,414,2.843,415,3.282,416,2.581,417,3.617,418,4.289,419,2.581,420,3.617,421,3.061,422,3.061,423,3.061,424,2.581,425,2.581,426,2.724,427,2.581,428,3.061,429,3.061,430,3.061,431,3.061,432,3.061,433,2.581,434,2.581,435,3.061,436,3.061]],["title/modules/ServerConfigModule.html",[29,1.094,43,2.019]],["body/modules/ServerConfigModule.html",[2,1.531,3,0.3,4,0.264,5,0.264,11,0.027,16,0.654,17,0.639,20,0.3,21,0.071,26,0.014,27,0.019,28,0.014,29,1.729,31,1.516,32,1.516,33,1.77,34,1.77,35,1.516,36,2.687,37,1.77,43,3.668,46,2.379,47,1.77,48,1.77,54,2.103,55,0.991,58,2.827,59,2.103,83,1,236,0.991,358,1.409,359,1.636,361,2.319,366,2.319,367,2.589,391,1.77,412,2.103,414,3.52,415,2.319,426,3.355,427,2.95,437,2.95,438,2.95,439,3.498,440,3.498,441,2.589,442,3.498,443,3.498]],["title/injectables/ServerConfigService.html",[65,0.887,426,1.847]],["body/injectables/ServerConfigService.html",[3,0.244,4,0.215,5,0.215,7,0.275,8,1.239,11,0.027,12,0.871,14,1.239,16,0.59,17,0.521,20,0.244,21,0.058,23,1.644,24,1.239,26,0.011,27,0.016,28,0.011,55,0.808,59,3.127,65,1.077,66,1.334,75,1.864,82,1.664,83,1.014,84,0.941,85,1.551,96,1.816,112,2.632,170,1.569,197,2.453,211,2.065,213,2.453,236,1.349,322,1.569,323,1.149,327,3.241,359,1.334,371,3.907,373,3.158,378,1.891,381,1.891,383,3.02,391,2.411,415,3.447,426,2.244,441,2.111,444,2.405,445,3.02,446,3.441,447,2.852,448,2.852,449,3.441,450,2.852,451,3.441,452,2.852,453,2.852,454,2.852,455,2.405,456,2.852]],["title/classes/User.html",[21,0.068,179,1.456]],["body/classes/User.html",[3,0.256,4,0.225,5,0.225,7,0.288,10,2.03,11,0.027,12,1.062,15,1.855,16,0.569,20,0.361,21,0.061,26,0.012,27,0.017,28,0.012,55,0.846,84,1.179,95,0.973,177,3.24,179,1.828,228,1.397,231,1.828,232,2.688,233,4.122,234,3.617,235,3.24,236,1.646,237,2.319,239,2.795,242,3.617,246,2.519,296,2.319,308,2.939,312,3.859,316,1.98,320,2.319,321,1.796,323,1.203,358,1.969,410,2.211,457,2.211,458,2.988,459,2.988,460,2.988,461,2.988,462,2.988,463,2.988,464,1.98,465,2.519]],["title/controllers/UserController.html",[0,1.094,466,2.226]],["body/controllers/UserController.html",[0,1.108,2,1.108,3,0.292,4,0.257,5,0.257,7,0.328,8,1.402,10,1.612,11,0.027,12,0.844,14,1.402,16,0.602,17,0.622,20,0.292,21,0.069,22,1.592,23,1.371,24,1.034,26,0.013,27,0.018,28,0.013,73,2.046,75,1.971,80,4.416,82,1.189,83,0.724,84,0.672,85,1.108,87,2.87,90,2.256,96,1.189,112,2.336,172,2.65,179,2.001,194,2.256,227,3.639,466,3.059,467,2.87,468,3.892,469,4.735,470,2.87,471,3.404,472,3.404,473,2.87,474,2.87,475,3.404,476,3.404,477,3.404,478,3.404]],["title/modules/UserModule.html",[29,1.094,44,1.847]],["body/modules/UserModule.html",[2,1.495,3,0.289,4,0.255,5,0.255,11,0.027,16,0.648,17,0.617,20,0.289,21,0.069,26,0.013,27,0.018,28,0.013,29,1.699,31,1.464,32,1.464,33,1.709,34,1.709,35,1.464,36,2.64,37,2.64,44,3.397,46,2.323,47,1.709,48,1.709,54,2.031,55,0.957,83,0.977,172,3.317,179,1.464,194,2.239,236,0.957,320,2.525,358,1.849,359,1.579,361,2.239,366,2.239,464,3.043,466,3.457,474,2.848,479,2.848,480,2.848,481,2.848,482,3.377,483,3.377,484,3.377]],["title/injectables/UserService.html",[65,0.887,172,1.7]],["body/injectables/UserService.html",[3,0.209,4,0.184,5,0.184,7,0.235,8,1.106,11,0.027,12,0.944,14,1.467,16,0.602,17,0.446,20,0.209,21,0.05,23,1.467,24,1.467,26,0.01,27,0.014,28,0.01,55,0.691,65,0.962,66,1.141,75,2.01,78,2.396,82,1.687,83,1.028,84,0.953,85,1.573,90,2.414,95,1.186,96,1.892,112,2.92,130,1.468,170,1.342,172,1.843,179,1.058,194,1.618,195,1.468,196,1.806,197,2.19,211,1.235,227,3.106,236,1.234,323,0.983,359,1.141,371,3.721,373,2.887,378,1.618,381,1.618,445,2.695,468,3.071,469,4.073,470,3.071,473,2.058,485,1.806,486,3.642,487,2.441,488,2.441,489,3.642,490,2.441,491,2.441,492,2.441,493,2.441,494,2.441,495,2.441,496,2.441,497,2.441,498,2.441,499,2.441,500,2.441,501,2.441,502,2.441,503,2.441,504,2.441,505,2.441,506,2.441,507,2.441,508,2.441,509,2.441,510,2.441]],["title/classes/WebClient.html",[21,0.068,311,1.456]],["body/classes/WebClient.html",[3,0.183,4,0.161,5,0.161,7,0.206,10,2.143,11,0.027,12,1.122,15,2.182,16,0.484,20,0.282,21,0.043,26,0.008,27,0.013,28,0.008,55,0.606,58,2.416,83,0.855,84,1.234,95,0.696,183,2.438,228,1,231,1.428,232,2.21,236,1.458,237,1.812,239,2.992,296,1.812,308,2.416,311,1.428,312,3.964,316,2.184,317,2.438,318,3.34,320,1.812,321,1.286,322,1.176,323,0.861,325,1.176,327,1.812,358,0.861,391,2.467,397,3.388,398,3.388,410,1.582,411,1.803,412,1.286,511,1.582,512,4.018,513,4.018,514,4.018,515,4.018,516,4.018,517,4.018,518,4.018,519,4.018,520,2.139,521,2.139,522,2.139,523,2.139,524,2.139,525,2.139,526,2.139,527,2.139,528,2.139,529,2.139,530,2.139,531,2.139,532,2.139,533,2.139,534,2.139,535,1.803]],["title/controllers/WebclientController.html",[0,1.094,536,2.226]],["body/controllers/WebclientController.html",[0,1.021,2,1.021,3,0.269,4,0.237,5,0.237,7,0.302,8,1.325,10,1.524,11,0.027,12,0.798,14,1.325,16,0.538,17,0.573,20,0.269,21,0.064,22,1.467,23,1.263,24,1.325,26,0.012,27,0.017,28,0.012,73,1.886,75,1.922,79,3.326,82,1.524,83,0.928,85,1.421,88,1.886,95,1.421,96,1.524,103,1.725,211,1.587,311,2.175,336,4.368,341,2.321,342,2.321,346,2.321,349,3.229,417,3.68,419,2.645,420,3.68,424,2.645,425,2.645,433,2.645,434,2.645,536,2.892,537,2.645,538,4.364,539,3.137,540,3.137,541,3.137,542,2.76,543,2.645,544,3.137,545,3.137,546,3.137,547,3.137,548,3.137,549,3.137,550,3.137]],["title/modules/WebclientModule.html",[29,1.094,45,2.019]],["body/modules/WebclientModule.html",[2,1.547,3,0.305,4,0.268,5,0.268,11,0.027,16,0.657,17,0.65,20,0.305,21,0.072,26,0.014,27,0.019,28,0.014,29,1.743,31,1.541,32,1.541,33,1.799,34,1.799,35,1.541,36,2.709,37,1.799,45,3.685,46,2.405,47,1.799,48,1.799,54,2.137,55,1.007,83,1.011,236,1.007,311,1.541,325,1.955,357,2.356,358,1.432,359,1.662,361,2.356,362,2.997,363,2.997,366,2.356,367,2.63,536,3.549,542,3.371,543,2.997,551,2.997,552,2.997,553,3.555,554,3.555]],["title/injectables/WebclientService.html",[65,0.887,542,1.847]],["body/injectables/WebclientService.html",[3,0.242,4,0.213,5,0.213,7,0.272,8,1.231,11,0.027,12,0.866,14,1.231,16,0.612,17,0.516,20,0.242,21,0.057,23,1.632,24,1.231,26,0.011,27,0.016,28,0.011,55,0.8,65,1.07,66,1.321,75,1.858,82,1.655,83,1.008,84,0.935,85,1.543,96,1.808,112,2.62,170,1.553,197,2.436,211,2.051,213,2.436,236,1.342,311,2.054,322,1.553,323,1.138,327,3.232,357,1.872,359,1.321,371,3.895,373,3.141,378,1.872,379,2.382,381,1.872,383,2.999,387,3.417,391,1.429,441,2.09,445,2.999,446,3.417,449,3.417,451,3.417,455,2.382,542,2.229,555,2.382,556,2.825,557,2.825,558,2.825,559,2.825,560,2.825,561,4.053,562,4.053,563,2.825]],["title/classes/WorkSpace.html",[21,0.068,236,0.951]],["body/classes/WorkSpace.html",[3,0.321,4,0.283,5,0.283,7,0.361,10,1.72,11,0.027,12,0.9,15,1.72,16,0.528,20,0.471,21,0.076,26,0.015,27,0.02,28,0.015,55,1.063,83,1.17,84,1.085,95,1.222,228,1.754,231,2.135,232,3.024,236,1.557,237,2.709,296,2.709,308,3.51,312,3.645,320,2.709,321,2.256,323,1.511,358,1.511,564,2.487,565,3.752,566,3.752,567,3.163,568,3.163]],["title/coverage.html",[569,3.384]],["body/coverage.html",[0,1.752,1,1.587,5,0.181,6,2.019,11,0.027,18,1.317,21,0.113,26,0.009,27,0.014,28,0.009,35,1.038,59,2.158,65,1.473,67,2.019,71,1.587,72,2.019,78,1.317,84,0.473,89,1.587,91,1.212,102,1.772,103,1.317,105,2.019,127,5.679,130,1.44,149,1.44,165,2.656,172,1.212,179,1.038,185,1.44,195,2.158,227,1.44,229,2.019,230,2.656,236,0.678,247,2.158,248,1.587,250,2.019,281,2.019,282,2.019,285,2.019,306,1.317,307,2.656,311,1.038,325,1.317,328,1.587,332,1.587,333,2.019,343,1.317,358,0.964,368,2.019,391,1.212,392,2.656,412,1.44,414,1.587,415,2.379,416,2.019,426,1.317,444,2.019,457,2.656,464,1.587,466,1.587,467,2.019,485,2.656,511,2.656,536,1.587,537,2.019,542,1.317,555,2.019,564,2.379,569,1.772,570,2.395,571,2.395,572,2.395,573,4.784,574,3.59,575,5.579,576,5.738,577,3.59,578,5.738,579,2.019,580,2.395,581,2.395,582,3.59,583,2.395,584,3.59,585,2.395,586,2.395,587,2.395]],["title/dependencies.html",[32,1.75,588,2.81]],["body/dependencies.html",[11,0.027,17,0.723,21,0.104,26,0.016,27,0.02,28,0.016,32,1.714,53,3.334,55,1.12,116,2.377,117,3.334,152,2.926,154,2.926,195,2.377,294,4.297,323,1.592,331,3.334,589,5.64,590,3.954,591,3.954,592,5.096,593,3.954,594,3.954,595,3.954,596,3.954,597,3.954,598,3.954,599,3.954,600,3.954,601,3.954,602,3.954,603,3.954,604,3.954,605,3.954,606,3.954,607,3.954,608,3.954,609,3.954,610,3.954]],["title/miscellaneous/enumerations.html",[611,1.314,612,3.404]],["body/miscellaneous/enumerations.html",[7,0.459,11,0.026,26,0.019,27,0.023,28,0.019,179,2.482,242,4.237,611,2.229,612,4.02,613,4.767,614,4.767,615,4.767,616,5.175,617,4.767,618,4.767,619,4.767]],["title/miscellaneous/functions.html",[611,1.314,620,3.404]],["body/miscellaneous/functions.html",[7,0.488,11,0.024,26,0.02,27,0.024,28,0.02,35,2.73,579,4.274,611,2.37,620,4.274,621,5.069]],["title/index.html",[7,0.27,622,2.81,623,2.81]],["body/index.html",[4,0.255,11,0.026,26,0.013,27,0.018,28,0.013,58,2.031,309,2.848,569,2.499,624,3.377,625,3.377,626,4.591,627,3.377,628,3.377,629,3.377,630,3.377,631,3.377,632,3.377,633,3.377,634,3.377,635,5.216,636,3.377,637,3.377,638,3.377,639,3.377,640,6.177,641,3.377,642,3.377,643,3.377,644,6.038,645,3.377,646,3.377,647,4.591,648,3.377,649,3.377,650,3.377,651,3.377,652,4.591,653,4.591,654,3.377,655,3.377,656,3.377,657,4.591,658,4.591,659,3.377,660,3.377,661,3.377,662,3.377,663,3.377,664,2.848,665,3.377,666,3.377,667,3.377,668,3.377,669,3.377,670,3.377,671,3.377,672,3.377,673,3.377,674,3.377,675,3.377,676,3.377,677,3.377,678,3.377,679,3.377,680,3.377,681,3.377,682,3.377]],["title/modules.html",[31,1.983]],["body/modules.html",[11,0.022,26,0.018,27,0.022,28,0.018,30,2.967,31,1.94,41,2.691,42,2.691,43,2.691,44,2.462,45,2.691,664,5.494,683,6.515,684,6.515,685,6.515]],["title/overview.html",[686,3.857]],["body/overview.html",[2,0.997,11,0.026,18,2.724,26,0.012,27,0.017,28,0.012,29,0.997,30,4.335,31,1.327,32,1.327,33,1.549,34,1.549,35,1.327,36,1.549,37,1.549,38,2.581,39,2.581,40,2.581,41,3.75,42,3.397,43,3.397,44,3.308,45,3.397,46,2.171,47,1.549,48,1.549,66,1.431,91,2.506,102,2.265,134,2.581,146,2.581,147,2.581,149,2.977,172,3.044,228,1.431,249,2.265,343,2.724,353,2.581,354,2.581,426,2.724,437,2.581,438,2.581,479,2.581,480,2.581,481,2.581,542,2.724,551,2.581,552,2.581,686,2.581,687,4.289,688,4.289,689,3.061]],["title/miscellaneous/typealiases.html",[611,1.314,690,4.037]],["body/miscellaneous/typealiases.html",[7,0.488,11,0.024,26,0.02,27,0.024,28,0.02,84,1.001,564,3.36,567,5.008,611,2.37,691,5.069,692,4.274]],["title/miscellaneous/variables.html",[611,1.314,693,3.404]],["body/miscellaneous/variables.html",[7,0.377,11,0.026,26,0.016,27,0.02,28,0.016,165,2.9,195,3.569,196,3.749,307,2.9,325,2.787,328,3.358,329,3.304,358,2.041,392,2.9,412,3.046,413,3.304,457,2.9,464,3.358,465,3.304,485,2.9,511,2.9,535,3.304,564,2.597,568,3.304,611,1.832,616,5.404,692,3.304,693,3.304,694,3.919,695,3.919,696,3.919,697,3.919,698,3.919,699,3.919,700,6.409]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["0.1.13",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["2",{"_index":689,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["36000",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.0.0",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["5.10.8",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":687,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":688,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["aliases",{"_index":691,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":665,"title":{},"body":{"index.html":{}}}],["angular",{"_index":634,"title":{},"body":{"index.html":{}}}],["app",{"_index":642,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":631,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["auth.controller",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth.split",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":71,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":103,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{},"coverage.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":675,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":91,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,jwtstrategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["await",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["backers",{"_index":666,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(password",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hashsync(createuserdto.password,parseint(process.env.hashpass",{"_index":502,"title":{},"body":{"injectables/UserService.html":{}}}],["bearer",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":685,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":683,"title":{},"body":{"modules.html":{}}}],["building",{"_index":627,"title":{},"body":{"index.html":{}}}],["bytes_received",{"_index":251,"title":{},"body":{"interfaces/IlogData.html":{}}}],["bytes_received?:string",{"_index":275,"title":{},"body":{"interfaces/IlogData.html":{}}}],["bytes_sent",{"_index":252,"title":{},"body":{"interfaces/IlogData.html":{}}}],["bytes_sent?:string",{"_index":276,"title":{},"body":{"interfaces/IlogData.html":{}}}],["canactivate",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checkpassword",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserpassword",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserpassword(user",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_logrequestmodule",{"_index":353,"title":{},"body":{"modules/LogrequestModule.html":{},"overview.html":{}}}],["cluster_logrequestmodule_providers",{"_index":354,"title":{},"body":{"modules/LogrequestModule.html":{},"overview.html":{}}}],["cluster_serverconfigmodule",{"_index":437,"title":{},"body":{"modules/ServerConfigModule.html":{},"overview.html":{}}}],["cluster_serverconfigmodule_providers",{"_index":438,"title":{},"body":{"modules/ServerConfigModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":479,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":480,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":481,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_webclientmodule",{"_index":551,"title":{},"body":{"modules/WebclientModule.html":{},"overview.html":{}}}],["cluster_webclientmodule_providers",{"_index":552,"title":{},"body":{"modules/WebclientModule.html":{},"overview.html":{}}}],["company_admin",{"_index":618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["companyadmin",{"_index":619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["conf_tracker_file",{"_index":512,"title":{},"body":{"classes/WebClient.html":{}}}],["config.controller",{"_index":440,"title":{},"body":{"modules/ServerConfigModule.html":{}}}],["config.controller.ts",{"_index":416,"title":{},"body":{"controllers/ServerConfigController.html":{},"coverage.html":{}}}],["config.controller.ts:13",{"_index":423,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["config.controller.ts:19",{"_index":421,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["config.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["config.module.ts",{"_index":439,"title":{},"body":{"modules/ServerConfigModule.html":{}}}],["config.service",{"_index":427,"title":{},"body":{"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{}}}],["config.service.ts",{"_index":444,"title":{},"body":{"injectables/ServerConfigService.html":{},"coverage.html":{}}}],["config.service.ts:14",{"_index":452,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["config.service.ts:19",{"_index":450,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["config.service.ts:8",{"_index":448,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["config/server",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"coverage.html":{}}}],["config_file",{"_index":393,"title":{},"body":{"classes/ServerConfig.html":{}}}],["config_file_tracker",{"_index":394,"title":{},"body":{"classes/ServerConfig.html":{}}}],["configmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(),mongoosemodule.forroot(process.env.mongo_server+\"/\"+process.env.mongo_database",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"controllers/LogrequestController.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"classes/WorkSpace.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["constructor(@injectmodel(serverconfig.name",{"_index":453,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":498,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel(webclient.name",{"_index":379,"title":{},"body":{"injectables/LogrequestService.html":{},"injectables/WebclientService.html":{}}}],["constructor(authservice",{"_index":287,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/UserController.html":{},"controllers/WebclientController.html":{}}}],["constructor(serverconfig",{"_index":447,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["constructor(usermodel",{"_index":487,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(webclient",{"_index":556,"title":{},"body":{"injectables/WebclientService.html":{}}}],["constructor(webclientmodel",{"_index":370,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["context",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/UserController.html":{},"controllers/WebclientController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/UserController.html":{},"controllers/WebclientController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('logrequest",{"_index":345,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["controller('server",{"_index":428,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["controller('user",{"_index":475,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('webclient",{"_index":544,"title":{},"body":{"controllers/WebclientController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["coverage",{"_index":569,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":468,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createuserdto",{"_index":470,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["created_at",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["createduser",{"_index":503,"title":{},"body":{"injectables/UserService.html":{}}}],["createduser.save",{"_index":505,"title":{},"body":{"injectables/UserService.html":{}}}],["createjwtpayload",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["createjwtpayload(user",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":227,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":501,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.workspace",{"_index":500,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["db",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["decoded",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"classes/WorkSpace.html":{}}}],["default",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":309,"title":{},"body":{"classes/LogRequest.html":{},"index.html":{}}}],["development",{"_index":643,"title":{},"body":{"index.html":{}}}],["document",{"_index":308,"title":{},"body":{"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["documentation",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":513,"title":{},"body":{"classes/WebClient.html":{}}}],["done",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["done(null",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dto/create",{"_index":473,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":497,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":654,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":628,"title":{},"body":{"index.html":{}}}],["elemmatch",{"_index":389,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["enumerations",{"_index":612,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["err.message",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["err.name",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["error",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["etc",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["exec",{"_index":387,"title":{},"body":{"injectables/LogrequestService.html":{},"injectables/WebclientService.html":{}}}],["executioncontext",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exp",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["express",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["extractjwt",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["fetch",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{}}}],["final_status",{"_index":253,"title":{},"body":{"interfaces/IlogData.html":{}}}],["final_status?:string",{"_index":271,"title":{},"body":{"interfaces/IlogData.html":{}}}],["findall",{"_index":469,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbwebclient",{"_index":369,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["findbwebclient(organization",{"_index":376,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["findbyid",{"_index":445,"title":{},"body":{"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["findbyid(id",{"_index":492,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id:any",{"_index":507,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(organization",{"_index":449,"title":{},"body":{"injectables/ServerConfigService.html":{},"injectables/WebclientService.html":{}}}],["findbyworkspace",{"_index":446,"title":{},"body":{"injectables/ServerConfigService.html":{},"injectables/WebclientService.html":{}}}],["findbyworkspace(organization",{"_index":451,"title":{},"body":{"injectables/ServerConfigService.html":{},"injectables/WebclientService.html":{}}}],["first_line_of_request",{"_index":254,"title":{},"body":{"interfaces/IlogData.html":{}}}],["first_line_of_request?:string",{"_index":270,"title":{},"body":{"interfaces/IlogData.html":{}}}],["folder_config",{"_index":395,"title":{},"body":{"classes/ServerConfig.html":{}}}],["folder_config_tracker",{"_index":396,"title":{},"body":{"classes/ServerConfig.html":{}}}],["framework",{"_index":626,"title":{},"body":{"index.html":{}}}],["function",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":620,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":420,"title":{},"body":{"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["get(':webclientid",{"_index":337,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlogrequestsbywebclient",{"_index":334,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["getlogrequestsbywebclient(@param('webclientid",{"_index":347,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["getlogrequestsbywebclient(webclientid",{"_index":335,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["getserverbyid",{"_index":417,"title":{},"body":{"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["getserverbyid(@param('id",{"_index":433,"title":{},"body":{"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["getserverbyid(id",{"_index":419,"title":{},"body":{"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["getservers",{"_index":418,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["getservers(@res",{"_index":429,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["getservers(res",{"_index":422,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["getting",{"_index":622,"title":{"index.html":{}},"body":{}}],["getusertologin",{"_index":486,"title":{},"body":{"injectables/UserService.html":{}}}],["getusertologin(logininfo",{"_index":494,"title":{},"body":{"injectables/UserService.html":{}}}],["getusertologin(logininfo:logindto",{"_index":509,"title":{},"body":{"injectables/UserService.html":{}}}],["getwebclients",{"_index":538,"title":{},"body":{"controllers/WebclientController.html":{}}}],["getwebclients(@res",{"_index":545,"title":{},"body":{"controllers/WebclientController.html":{}}}],["getwebclients(res",{"_index":540,"title":{},"body":{"controllers/WebclientController.html":{}}}],["grow",{"_index":661,"title":{},"body":{"index.html":{}}}],["guard",{"_index":102,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{}}}],["heavily",{"_index":632,"title":{},"body":{"index.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":672,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{}}}],["httpexception('invalid",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["httpexception(message",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{}}}],["https://nestjs.com",{"_index":679,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["httpstatus.unauthorized",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["id",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["id,@res",{"_index":434,"title":{},"body":{"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["identifier",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["if(!checkpassword",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!match",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["ilogdata",{"_index":248,"title":{"interfaces/IlogData.html":{}},"body":{"interfaces/IlogData.html":{},"classes/LogRequest.html":{},"coverage.html":{}}}],["implements",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["imports:[mongoosemodule.forfeature",{"_index":361,"title":{},"body":{"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{}}}],["incorrect",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{}}}],["information",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":65,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{},"coverage.html":{}}}],["injectables",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{},"overview.html":{}}}],["injectmodel",{"_index":378,"title":{},"body":{"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["injectmodel(logrequest.name",{"_index":380,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["injectmodel(workspace.name",{"_index":381,"title":{},"body":{"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["inspired",{"_index":633,"title":{},"body":{"index.html":{}}}],["installation",{"_index":639,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":641,"title":{},"body":{"index.html":{}}}],["interface",{"_index":247,"title":{"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{}},"body":{"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["interfaces",{"_index":249,"title":{},"body":{"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"overview.html":{}}}],["interfaces/jwt",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["ip_client",{"_index":514,"title":{},"body":{"classes/WebClient.html":{}}}],["ip_local",{"_index":255,"title":{},"body":{"interfaces/IlogData.html":{}}}],["ip_local?:string",{"_index":277,"title":{},"body":{"interfaces/IlogData.html":{}}}],["is_active",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["is_configured",{"_index":397,"title":{},"body":{"classes/ServerConfig.html":{},"classes/WebClient.html":{}}}],["is_deleted",{"_index":398,"title":{},"body":{"classes/ServerConfig.html":{},"classes/WebClient.html":{}}}],["isnotempty",{"_index":330,"title":{},"body":{"classes/LoginDto.html":{}}}],["join",{"_index":668,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["jwt",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.verify(token",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jwtfromrequest",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":185,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":149,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["kamil",{"_index":676,"title":{},"body":{"index.html":{}}}],["lastline",{"_index":515,"title":{},"body":{"classes/WebClient.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["license",{"_index":682,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":658,"title":{},"body":{"index.html":{}}}],["logfile",{"_index":516,"title":{},"body":{"classes/WebClient.html":{}}}],["login",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginuserdto",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginattempt",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":78,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["logininfo",{"_index":496,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuserdto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["logrequest",{"_index":306,"title":{"classes/LogRequest.html":{}},"body":{"classes/LogRequest.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"coverage.html":{}}}],["logrequest.controller",{"_index":360,"title":{},"body":{"modules/LogrequestModule.html":{}}}],["logrequest.name",{"_index":364,"title":{},"body":{"modules/LogrequestModule.html":{}}}],["logrequest.service",{"_index":344,"title":{},"body":{"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{}}}],["logrequest/logrequest.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["logrequestcontroller",{"_index":332,"title":{"controllers/LogrequestController.html":{}},"body":{"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"coverage.html":{}}}],["logrequestmodel",{"_index":372,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["logrequestmodule",{"_index":42,"title":{"modules/LogrequestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogrequestModule.html":{},"modules.html":{},"overview.html":{}}}],["logrequestschema",{"_index":328,"title":{},"body":{"classes/LogRequest.html":{},"modules/LogrequestModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logrequestservice",{"_index":343,"title":{"injectables/LogrequestService.html":{}},"body":{"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"coverage.html":{},"overview.html":{}}}],["logrequets",{"_index":350,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["logs",{"_index":310,"title":{},"body":{"classes/LogRequest.html":{}}}],["match",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["metadata",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["miscellaneous",{"_index":611,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":657,"title":{},"body":{"index.html":{}}}],["mode",{"_index":647,"title":{},"body":{"index.html":{}}}],["model",{"_index":371,"title":{},"body":{"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":323,"title":{},"body":{"classes/LogRequest.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{}}}],["more",{"_index":671,"title":{},"body":{"index.html":{}}}],["msg",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["myśliwiec",{"_index":677,"title":{},"body":{"index.html":{}}}],["name",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{}}}],["nest",{"_index":635,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":681,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"classes/LogRequest.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":625,"title":{},"body":{"index.html":{}}}],["npm",{"_index":640,"title":{},"body":{"index.html":{}}}],["number",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/WebClient.html":{}}}],["open",{"_index":659,"title":{},"body":{"index.html":{}}}],["optional",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/IlogData.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["organization",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/WebclientService.html":{}}}],["organization:number",{"_index":283,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["overview",{"_index":686,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":588,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":341,"title":{},"body":{"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["passport",{"_index":294,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{}}}],["path_log_folder",{"_index":517,"title":{},"body":{"classes/WebClient.html":{}}}],["payload",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":282,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["please",{"_index":669,"title":{},"body":{"index.html":{}}}],["populate('server",{"_index":562,"title":{},"body":{"injectables/WebclientService.html":{}}}],["populate('webclient",{"_index":386,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["populate('workspace",{"_index":561,"title":{},"body":{"injectables/WebclientService.html":{}}}],["post",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prefix",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/UserController.html":{},"controllers/WebclientController.html":{}}}],["private",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["process.env.secretjwt",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":649,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":624,"title":{},"body":{"index.html":{}}}],["project",{"_index":660,"title":{},"body":{"index.html":{}}}],["promise",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["promise(async",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["prop",{"_index":312,"title":{},"body":{"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["prop({type",{"_index":316,"title":{},"body":{"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{}}}],["properties",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["query_request",{"_index":256,"title":{},"body":{"interfaces/IlogData.html":{}}}],["query_request?:string",{"_index":280,"title":{},"body":{"interfaces/IlogData.html":{}}}],["read",{"_index":670,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["ref",{"_index":318,"title":{},"body":{"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/WebClient.html":{}}}],["referer",{"_index":257,"title":{},"body":{"interfaces/IlogData.html":{}}}],["referer?:string",{"_index":273,"title":{},"body":{"interfaces/IlogData.html":{}}}],["reflect",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["remote_hostname",{"_index":258,"title":{},"body":{"interfaces/IlogData.html":{}}}],["remote_hostname?:string",{"_index":266,"title":{},"body":{"interfaces/IlogData.html":{}}}],["remote_logname",{"_index":259,"title":{},"body":{"interfaces/IlogData.html":{}}}],["remote_logname?:string",{"_index":267,"title":{},"body":{"interfaces/IlogData.html":{}}}],["remote_user",{"_index":260,"title":{},"body":{"interfaces/IlogData.html":{}}}],["remote_user?:string",{"_index":268,"title":{},"body":{"interfaces/IlogData.html":{}}}],["repository",{"_index":638,"title":{},"body":{"index.html":{}}}],["req",{"_index":336,"title":{},"body":{"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["request",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["request.headers.authorization",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request_method",{"_index":261,"title":{},"body":{"interfaces/IlogData.html":{}}}],["request_method?:string",{"_index":279,"title":{},"body":{"interfaces/IlogData.html":{}}}],["require('bcrypt",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["res,@request",{"_index":349,"title":{},"body":{"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["res,request",{"_index":424,"title":{},"body":{"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["res.status(httpstatus.accepted).json(result.data",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(httpstatus.ok).json(logrequets",{"_index":352,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["res.status(httpstatus.ok).json(server",{"_index":436,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["res.status(httpstatus.ok).json(servers",{"_index":432,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["res.status(httpstatus.ok).json(webclient",{"_index":550,"title":{},"body":{"controllers/WebclientController.html":{}}}],["res.status(httpstatus.ok).json(webclients",{"_index":548,"title":{},"body":{"controllers/WebclientController.html":{}}}],["res.status(httpstatus.unauthorized).json({msg",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}],["resolve",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve({success",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.msg",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["result.success",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{},"controllers/ServerConfigController.html":{},"injectables/ServerConfigService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WebclientController.html":{},"injectables/WebclientService.html":{}}}],["rimraf",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/User.html":{}}}],["role:string",{"_index":284,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["role:user.role.name",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["roles",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":644,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":629,"title":{},"body":{"index.html":{}}}],["schema",{"_index":320,"title":{},"body":{"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["schema:logrequestschema",{"_index":365,"title":{},"body":{"modules/LogrequestModule.html":{}}}],["schema:serverconfigschema",{"_index":443,"title":{},"body":{"modules/ServerConfigModule.html":{}}}],["schema:webclientschema",{"_index":363,"title":{},"body":{"modules/LogrequestModule.html":{},"modules/WebclientModule.html":{}}}],["schema:workspaceschema",{"_index":367,"title":{},"body":{"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/WebclientModule.html":{}}}],["schemafactory",{"_index":321,"title":{},"body":{"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["schemafactory.createforclass(logrequest",{"_index":329,"title":{},"body":{"classes/LogRequest.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(serverconfig",{"_index":413,"title":{},"body":{"classes/ServerConfig.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":465,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(webclient",{"_index":535,"title":{},"body":{"classes/WebClient.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(workspace",{"_index":568,"title":{},"body":{"classes/WorkSpace.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkeyprovider",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"classes/WebClient.html":{},"index.html":{}}}],["server_name",{"_index":518,"title":{},"body":{"classes/WebClient.html":{}}}],["server_type",{"_index":399,"title":{},"body":{"classes/ServerConfig.html":{}}}],["serverconfig",{"_index":391,"title":{"classes/ServerConfig.html":{}},"body":{"classes/ServerConfig.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/WebClient.html":{},"injectables/WebclientService.html":{},"coverage.html":{}}}],["serverconfig.name",{"_index":442,"title":{},"body":{"modules/ServerConfigModule.html":{}}}],["serverconfig.schema",{"_index":534,"title":{},"body":{"classes/WebClient.html":{}}}],["serverconfigcontroller",{"_index":414,"title":{"controllers/ServerConfigController.html":{}},"body":{"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"coverage.html":{}}}],["serverconfigmodule",{"_index":43,"title":{"modules/ServerConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServerConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["serverconfigschema",{"_index":412,"title":{},"body":{"classes/ServerConfig.html":{},"modules/ServerConfigModule.html":{},"classes/WebClient.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverconfigservice",{"_index":426,"title":{"injectables/ServerConfigService.html":{}},"body":{"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["servers",{"_index":430,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["session",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":630,"title":{},"body":{"index.html":{}}}],["size_of_response_bytes",{"_index":262,"title":{},"body":{"interfaces/IlogData.html":{}}}],["size_of_response_bytes?:string",{"_index":272,"title":{},"body":{"interfaces/IlogData.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"controllers/LogrequestController.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"index.html":{}}}],["sponsors",{"_index":663,"title":{},"body":{"index.html":{}}}],["src/.../auth.service.ts",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logrequest.schema.ts",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.enum.ts",{"_index":613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../serverconfig.schema.ts",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../webclient.schema.ts",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../workspace.schema.ts",{"_index":692,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:11",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts:12",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:49",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/interfaces/jwt",{"_index":281,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":285,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:19",{"_index":290,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:8",{"_index":288,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/guard/auth.guard",{"_index":342,"title":{},"body":{"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["src/guard/auth.guard.ts",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/guard/auth.guard.ts:12",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/guard/auth.guard.ts:23",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/logrequest/logrequest.controller.ts",{"_index":333,"title":{},"body":{"controllers/LogrequestController.html":{},"coverage.html":{}}}],["src/logrequest/logrequest.controller.ts:12",{"_index":338,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["src/logrequest/logrequest.module.ts",{"_index":355,"title":{},"body":{"modules/LogrequestModule.html":{}}}],["src/logrequest/logrequest.service.ts",{"_index":368,"title":{},"body":{"injectables/LogrequestService.html":{},"coverage.html":{}}}],["src/logrequest/logrequest.service.ts:16",{"_index":377,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["src/logrequest/logrequest.service.ts:9",{"_index":374,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["src/main.ts",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/schemas/logrequest.schema",{"_index":356,"title":{},"body":{"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{}}}],["src/schemas/logrequest.schema.ts",{"_index":307,"title":{},"body":{"classes/LogRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/logrequest.schema.ts:11",{"_index":314,"title":{},"body":{"classes/LogRequest.html":{}}}],["src/schemas/logrequest.schema.ts:14",{"_index":315,"title":{},"body":{"classes/LogRequest.html":{}}}],["src/schemas/logrequest.schema.ts:17",{"_index":319,"title":{},"body":{"classes/LogRequest.html":{}}}],["src/schemas/logrequest.schema.ts:20",{"_index":313,"title":{},"body":{"classes/LogRequest.html":{}}}],["src/schemas/serverconfig.schema",{"_index":441,"title":{},"body":{"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"injectables/WebclientService.html":{}}}],["src/schemas/serverconfig.schema.ts",{"_index":392,"title":{},"body":{"classes/ServerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/serverconfig.schema.ts:12",{"_index":400,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:15",{"_index":401,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:18",{"_index":403,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:21",{"_index":404,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:24",{"_index":405,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:27",{"_index":406,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:30",{"_index":408,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:33",{"_index":409,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:36",{"_index":402,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/serverconfig.schema.ts:9",{"_index":407,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/schemas/user.schema",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/schemas/user.schema.ts",{"_index":457,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/user.schema.ts:10",{"_index":462,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:13",{"_index":460,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:16",{"_index":461,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:19",{"_index":463,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:22",{"_index":458,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:26",{"_index":459,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/webclient.schema",{"_index":357,"title":{},"body":{"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{}}}],["src/schemas/webclient.schema.ts",{"_index":511,"title":{},"body":{"classes/WebClient.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/webclient.schema.ts:10",{"_index":528,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:13",{"_index":522,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:16",{"_index":523,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:19",{"_index":526,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:22",{"_index":532,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:25",{"_index":529,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:28",{"_index":520,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:31",{"_index":524,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:34",{"_index":525,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:37",{"_index":527,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:40",{"_index":531,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:43",{"_index":533,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:46",{"_index":530,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/webclient.schema.ts:49",{"_index":521,"title":{},"body":{"classes/WebClient.html":{}}}],["src/schemas/workspace.schema",{"_index":359,"title":{},"body":{"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{}}}],["src/schemas/workspace.schema.ts",{"_index":564,"title":{},"body":{"classes/WorkSpace.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/workspace.schema.ts:12",{"_index":565,"title":{},"body":{"classes/WorkSpace.html":{}}}],["src/schemas/workspace.schema.ts:9",{"_index":566,"title":{},"body":{"classes/WorkSpace.html":{}}}],["src/server",{"_index":415,"title":{},"body":{"controllers/ServerConfigController.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/login",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":467,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:11",{"_index":471,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:16",{"_index":472,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module.ts",{"_index":482,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/user/user.service.ts",{"_index":485,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.service.ts:11",{"_index":488,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":490,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:25",{"_index":491,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:29",{"_index":493,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":495,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/ilogdata",{"_index":324,"title":{},"body":{"classes/LogRequest.html":{}}}],["src/utils/ilogdata.ts",{"_index":250,"title":{},"body":{"interfaces/IlogData.html":{},"coverage.html":{}}}],["src/utils/roles.enum",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["src/utils/roles.enum.ts",{"_index":614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/webclient/webclient.controller.ts",{"_index":537,"title":{},"body":{"controllers/WebclientController.html":{},"coverage.html":{}}}],["src/webclient/webclient.controller.ts:12",{"_index":541,"title":{},"body":{"controllers/WebclientController.html":{}}}],["src/webclient/webclient.controller.ts:18",{"_index":539,"title":{},"body":{"controllers/WebclientController.html":{}}}],["src/webclient/webclient.module.ts",{"_index":553,"title":{},"body":{"modules/WebclientModule.html":{}}}],["src/webclient/webclient.service.ts",{"_index":555,"title":{},"body":{"injectables/WebclientService.html":{},"coverage.html":{}}}],["src/webclient/webclient.service.ts:15",{"_index":559,"title":{},"body":{"injectables/WebclientService.html":{}}}],["src/webclient/webclient.service.ts:23",{"_index":558,"title":{},"body":{"injectables/WebclientService.html":{}}}],["src/webclient/webclient.service.ts:9",{"_index":557,"title":{},"body":{"injectables/WebclientService.html":{}}}],["start",{"_index":645,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":648,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":650,"title":{},"body":{"index.html":{}}}],["started",{"_index":623,"title":{"index.html":{}},"body":{}}],["starter",{"_index":637,"title":{},"body":{"index.html":{}}}],["statements",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":673,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":293,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{},"classes/WorkSpace.html":{}}}],["super",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super_admin",{"_index":615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["superadmin",{"_index":617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":664,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":684,"title":{},"body":{"modules.html":{}}}],["table",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":653,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":656,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":655,"title":{},"body":{"index.html":{}}}],["tests",{"_index":652,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":662,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(payload",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.validateuserbypassword(loginuserdto",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.checkuserpassword(usertoattempt,loginattempt.password",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createjwtpayload(usertoattempt",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(data",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logrequestmodel.find({webclient:webclient._id",{"_index":385,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["this.logrequestservice.findbwebclient(req.user.organization,webclientid",{"_index":351,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["this.serverconfig.find({workspace:workspace._id}).populate('workspace').exec",{"_index":454,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["this.serverconfig.findone({workspace:workspace._id,_id:id}).populate('workspace').exec",{"_index":456,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["this.serverconfigservice.findbyid(req.user.organization,id",{"_index":435,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["this.serverconfigservice.findbyworkspace(req.user.organization",{"_index":431,"title":{},"body":{"controllers/ServerConfigController.html":{}}}],["this.usermodel(createuserdto",{"_index":504,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find().exec",{"_index":506,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":508,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone({username:logininfo.username}).exec",{"_index":510,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findbyid(payload.id",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getusertologin(loginattempt",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validatetoken(request.headers.authorization",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.webclient.find({workspace:workspace._id",{"_index":560,"title":{},"body":{"injectables/WebclientService.html":{}}}],["this.webclient.findone({workspace:workspace._id,_id:id",{"_index":563,"title":{},"body":{"injectables/WebclientService.html":{}}}],["this.webclientmodel.findbyid(webclientid).exec",{"_index":384,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["this.webclientservice.findbyid(req.user.organization,id",{"_index":549,"title":{},"body":{"controllers/WebclientController.html":{}}}],["this.webclientservice.findbyworkspace(req.user.organization",{"_index":547,"title":{},"body":{"controllers/WebclientController.html":{}}}],["this.workspacemodel.findbyid(createuserdto.workspace).exec",{"_index":499,"title":{},"body":{"injectables/UserService.html":{}}}],["this.workspacemodel.findbyid(organization).exec",{"_index":383,"title":{},"body":{"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/WebclientService.html":{}}}],["throw",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["time_request",{"_index":263,"title":{},"body":{"interfaces/IlogData.html":{}}}],["time_request?:string",{"_index":269,"title":{},"body":{"interfaces/IlogData.html":{}}}],["time_servir_request",{"_index":264,"title":{},"body":{"interfaces/IlogData.html":{}}}],["time_servir_request?:string",{"_index":278,"title":{},"body":{"interfaces/IlogData.html":{}}}],["token",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["touch",{"_index":674,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["try",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["twitter",{"_index":680,"title":{},"body":{"index.html":{}}}],["type",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IlogData.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LogRequest.html":{},"classes/LoginDto.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":690,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":322,"title":{},"body":{"classes/LogRequest.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/WebClient.html":{},"injectables/WebclientService.html":{}}}],["types.objectid",{"_index":327,"title":{},"body":{"classes/LogRequest.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/WebClient.html":{},"injectables/WebclientService.html":{}}}],["types.objectid,id:types.objectid",{"_index":455,"title":{},"body":{"injectables/ServerConfigService.html":{},"injectables/WebclientService.html":{}}}],["types.objectid,webclientid:types.objectid",{"_index":382,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["typescript",{"_index":636,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":291,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":317,"title":{},"body":{"classes/LogRequest.html":{},"classes/ServerConfig.html":{},"classes/WebClient.html":{}}}],["unit",{"_index":651,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":425,"title":{},"body":{"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["useguards(authguard",{"_index":346,"title":{},"body":{"controllers/LogrequestController.html":{},"controllers/ServerConfigController.html":{},"controllers/WebclientController.html":{}}}],["useguards,request",{"_index":340,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["user",{"_index":179,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.controller",{"_index":483,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:4",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["user.dto.ts:6",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["user.dto.ts:9",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":484,"title":{},"body":{"modules/UserModule.html":{}}}],["user.password",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":474,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.workspace._id",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["user_agent",{"_index":265,"title":{},"body":{"interfaces/IlogData.html":{}}}],["user_agent?:string",{"_index":274,"title":{},"body":{"interfaces/IlogData.html":{}}}],["usercontroller",{"_index":466,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":489,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":44,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usermodule,serverconfigmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["username",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/User.html":{}}}],["username:user.username",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":464,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":172,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["usertoattempt",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":286,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":289,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatetoken",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{}}}],["validatetoken(auth",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{}}}],["validateuser",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbypassword",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbypassword(loginattempt",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":331,"title":{},"body":{"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":616,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":693,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["virtual_host_file",{"_index":519,"title":{},"body":{"classes/WebClient.html":{}}}],["watch",{"_index":646,"title":{},"body":{"index.html":{}}}],["webclient",{"_index":311,"title":{"classes/WebClient.html":{}},"body":{"classes/LogRequest.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/WebClient.html":{},"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"coverage.html":{}}}],["webclient.controller",{"_index":554,"title":{},"body":{"modules/WebclientModule.html":{}}}],["webclient.name",{"_index":362,"title":{},"body":{"modules/LogrequestModule.html":{},"modules/WebclientModule.html":{}}}],["webclient.schema",{"_index":326,"title":{},"body":{"classes/LogRequest.html":{}}}],["webclient.service",{"_index":543,"title":{},"body":{"controllers/WebclientController.html":{},"modules/WebclientModule.html":{}}}],["webclient.workspace':workspace._id",{"_index":388,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["webclient/webclient.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["webclientcontroller",{"_index":536,"title":{"controllers/WebclientController.html":{}},"body":{"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"coverage.html":{}}}],["webclientid",{"_index":339,"title":{},"body":{"controllers/LogrequestController.html":{},"injectables/LogrequestService.html":{}}}],["webclientid,@res",{"_index":348,"title":{},"body":{"controllers/LogrequestController.html":{}}}],["webclientmodel",{"_index":375,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["webclientmodule",{"_index":45,"title":{"modules/WebclientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WebclientModule.html":{},"modules.html":{},"overview.html":{}}}],["webclients",{"_index":546,"title":{},"body":{"controllers/WebclientController.html":{}}}],["webclientschema",{"_index":325,"title":{},"body":{"classes/LogRequest.html":{},"modules/LogrequestModule.html":{},"classes/WebClient.html":{},"modules/WebclientModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["webclientservice",{"_index":542,"title":{"injectables/WebclientService.html":{}},"body":{"controllers/WebclientController.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"coverage.html":{},"overview.html":{}}}],["website",{"_index":678,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":236,"title":{"classes/WorkSpace.html":{}},"body":{"classes/CreateUserDto.html":{},"modules/LogrequestModule.html":{},"injectables/LogrequestService.html":{},"classes/ServerConfig.html":{},"modules/ServerConfigModule.html":{},"injectables/ServerConfigService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/WebClient.html":{},"modules/WebclientModule.html":{},"injectables/WebclientService.html":{},"classes/WorkSpace.html":{},"coverage.html":{}}}],["workspace._id",{"_index":390,"title":{},"body":{"injectables/LogrequestService.html":{}}}],["workspace.name",{"_index":366,"title":{},"body":{"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{}}}],["workspace.schema",{"_index":410,"title":{},"body":{"classes/ServerConfig.html":{},"classes/User.html":{},"classes/WebClient.html":{}}}],["workspace:workspace",{"_index":411,"title":{},"body":{"classes/ServerConfig.html":{},"classes/WebClient.html":{}}}],["workspacedocument",{"_index":567,"title":{},"body":{"classes/WorkSpace.html":{},"miscellaneous/typealiases.html":{}}}],["workspacemodel",{"_index":373,"title":{},"body":{"injectables/LogrequestService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserService.html":{},"injectables/WebclientService.html":{}}}],["workspaceschema",{"_index":358,"title":{},"body":{"modules/LogrequestModule.html":{},"classes/ServerConfig.html":{},"modules/ServerConfigModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/WebClient.html":{},"modules/WebclientModule.html":{},"classes/WorkSpace.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":667,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogrequestModule.html":{},"modules/ServerConfigModule.html":{},"modules/UserModule.html":{},"modules/WebclientModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLogrequestModule\n\nLogrequestModule\n\nAppModule -->\n\nLogrequestModule->AppModule\n\n\n\n\n\nServerConfigModule\n\nServerConfigModule\n\nAppModule -->\n\nServerConfigModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWebclientModule\n\nWebclientModule\n\nAppModule -->\n\nWebclientModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LogrequestModule\n                        \n                        \n                            ServerConfigModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            WebclientModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { ServerConfigModule } from './server-config/server-config.module';\nimport { WebclientModule } from './webclient/webclient.module';\nimport { LogrequestModule } from './logrequest/logrequest.module';\n@Module({\n  imports: [ConfigModule.forRoot(),MongooseModule.forRoot(process.env.MONGO_SERVER+\"/\"+process.env.MONGO_DATABASE), AuthModule, UserModule,ServerConfigModule, WebclientModule, LogrequestModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res } from '@nestjs/common';\nimport { LoginDto } from 'src/user/dto/login-user.dto';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n    \n    constructor(private authService: AuthService) { }\n    \n    @Post() \n    async login(@Body() loginUserDto: LoginDto, @Res() res){\n        const result = await this.authService.validateUserByPassword(loginUserDto);\n        if (result.success) {\n            return res.status(HttpStatus.ACCEPTED).json(result.data);\n        } else {\n            return res.status(HttpStatus.UNAUTHORIZED).json({msg: result.msg});\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(auth: string)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/auth.guard.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport * as jwt from 'jsonwebtoken';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n   \n      if (!request.headers.authorization) {\n        return false;\n      }\n      request.user = await this.validateToken(request.headers.authorization);\n      return true;\n    \n  }\n\n  async validateToken(auth: string) {\n    if (auth.split(' ')[0] !== 'Bearer') {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    const token = auth.split(' ')[1];\n\n    try {\n      const decoded: any = await jwt.verify(token, process.env.secretJWT);\n\n      return decoded;\n    } catch (err) {\n      const message = 'Token error: ' + (err.message || err.name);\n      throw new HttpException(message, HttpStatus.UNAUTHORIZED);\n    }\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService,JwtStrategy],\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n    JwtModule.registerAsync({\n      useFactory: async () => ({\n        secret: process.env.secretJWT\n      }),\n    }),\n    UserModule\n  ],\n\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserPassword\n                            \n                            \n                                createJwtPayload\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                validateUserByPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkUserPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserPassword(user, password)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtPayload\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtPayload(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { exp: number; token: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserByPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserByPassword(loginAttempt: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginAttempt\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtPayload } from './interfaces/jwt-payload.interface';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserService } from 'src/user/user.service';\nimport { User } from 'src/schemas/user.schema';\nimport { LoginDto } from 'src/user/dto/login-user.dto';\nconst bcrypt = require('bcrypt');\n@Injectable()\nexport class AuthService {\n    constructor(private usersService: UserService, private jwtService: JwtService){ }\n\n    async validateUserByPassword(loginAttempt: LoginDto): Promise {\n        let userToAttempt: User = await this.usersService.getUserToLogin(loginAttempt);\n            \n        return new Promise(async (resolve) => {\n            if (!userToAttempt) {\n                resolve({success: false, msg: 'the information are incorrect'});\n            }else {\n                let checkPassword =  await this.checkUserPassword(userToAttempt,loginAttempt.password);\n                \n                if(!checkPassword)\n                    resolve({success: false, msg: 'the information are incorrect'});\n                      else\n                resolve({success: true, data: this.createJwtPayload(userToAttempt)});\n            }\n        });\n    }\n\n    createJwtPayload(user){\n        let data: JwtPayload = {\n            id: user.id,\n            organization: user.workSpace._id,\n            role:user.role.name,\n            username:user.username,\n        };\n\n        let jwt = this.jwtService.sign(data);\n\n        return {\n            exp: 36000,\n            token: jwt            \n        }\n    }\n\n    async validateUser(payload: JwtPayload): Promise {\n        return await this.usersService.findById(payload.id);\n    }\n\n    async checkUserPassword(user, password): Promise {\n        //... fetch user from a db etc.\n        const match = await bcrypt.compare(password, user.password);\n       \n        if(!match) {\n           return false;\n        }\n     \n       return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                created_at\n                            \n                            \n                                    Readonly\n                                is_active\n                            \n                            \n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                username\n                            \n                            \n                                workSpace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            is_active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ROLES\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workSpace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ROLES } from \"src/utils/roles.enum\";\n\nexport class CreateUserDto {\n    readonly username: string;\n             password: string;\n    readonly role: ROLES;\n             workSpace: any;\n    readonly created_at: Date;\n    readonly is_active: boolean;\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IlogData.html":{"url":"interfaces/IlogData.html","title":"interface - IlogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IlogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/IlogData.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        BYTES_RECEIVED\n                                \n                                \n                                            Optional\n                                        BYTES_SENT\n                                \n                                \n                                            Optional\n                                        FINAL_STATUS\n                                \n                                \n                                            Optional\n                                        FIRST_LINE_OF_REQUEST\n                                \n                                \n                                            Optional\n                                        IP_LOCAL\n                                \n                                \n                                            Optional\n                                        QUERY_REQUEST\n                                \n                                \n                                            Optional\n                                        REFERER\n                                \n                                \n                                            Optional\n                                        REMOTE_HOSTNAME\n                                \n                                \n                                            Optional\n                                        REMOTE_LOGNAME\n                                \n                                \n                                            Optional\n                                        REMOTE_USER\n                                \n                                \n                                            Optional\n                                        REQUEST_METHOD\n                                \n                                \n                                            Optional\n                                        SIZE_OF_RESPONSE_BYTES\n                                \n                                \n                                            Optional\n                                        TIME_REQUEST\n                                \n                                \n                                            Optional\n                                        TIME_SERVIR_REQUEST\n                                \n                                \n                                            Optional\n                                        USER_AGENT\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BYTES_RECEIVED\n                                    \n                                \n                                \n                                    \n                                        BYTES_RECEIVED:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BYTES_SENT\n                                    \n                                \n                                \n                                    \n                                        BYTES_SENT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FINAL_STATUS\n                                    \n                                \n                                \n                                    \n                                        FINAL_STATUS:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FIRST_LINE_OF_REQUEST\n                                    \n                                \n                                \n                                    \n                                        FIRST_LINE_OF_REQUEST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IP_LOCAL\n                                    \n                                \n                                \n                                    \n                                        IP_LOCAL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        QUERY_REQUEST\n                                    \n                                \n                                \n                                    \n                                        QUERY_REQUEST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REFERER\n                                    \n                                \n                                \n                                    \n                                        REFERER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REMOTE_HOSTNAME\n                                    \n                                \n                                \n                                    \n                                        REMOTE_HOSTNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REMOTE_LOGNAME\n                                    \n                                \n                                \n                                    \n                                        REMOTE_LOGNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REMOTE_USER\n                                    \n                                \n                                \n                                    \n                                        REMOTE_USER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REQUEST_METHOD\n                                    \n                                \n                                \n                                    \n                                        REQUEST_METHOD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SIZE_OF_RESPONSE_BYTES\n                                    \n                                \n                                \n                                    \n                                        SIZE_OF_RESPONSE_BYTES:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TIME_REQUEST\n                                    \n                                \n                                \n                                    \n                                        TIME_REQUEST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TIME_SERVIR_REQUEST\n                                    \n                                \n                                \n                                    \n                                        TIME_SERVIR_REQUEST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        USER_AGENT\n                                    \n                                \n                                \n                                    \n                                        USER_AGENT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IlogData {\n    REMOTE_HOSTNAME?:string;\n    REMOTE_LOGNAME?:string;\n    REMOTE_USER?:string;\n    TIME_REQUEST?:string;\n    FIRST_LINE_OF_REQUEST?:string;\n    FINAL_STATUS?:string;\n    SIZE_OF_RESPONSE_BYTES?:string;\n    REFERER?:string;\n    USER_AGENT?:string;\n    BYTES_RECEIVED?:string;\n    BYTES_SENT?:string;\n    IP_LOCAL?:string;\n    TIME_SERVIR_REQUEST?:string;\n    REQUEST_METHOD?:string;\n    QUERY_REQUEST?:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/jwt-payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        organization\n                                \n                                \n                                        role\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                    \n                                \n                                \n                                    \n                                        organization:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n    id: any;\n    username: string;\n    organization:number;\n    role:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { JwtPayload } from '../interfaces/jwt-payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\n    constructor(private authService: AuthService){\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKeyProvider: (request, jwtToken, done) => {\n                done(null, process.env.secretJWT);\n              },\n        });\n    }\n\n    async validate(payload: JwtPayload){\n        const user = await this.authService.validateUser(payload);\n\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n\n        return user;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogRequest.html":{"url":"classes/LogRequest.html","title":"class - LogRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/logRequest.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                logs\n                            \n                            \n                                webclient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/logRequest.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/logRequest.schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IlogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/logRequest.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            webclient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WebClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'WebClient'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/logRequest.schema.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { IlogData } from 'src/utils/IlogData';\nimport { WebClient, WebClientSchema } from './webClient.schema';\n\n\n@Schema()\nexport class LogRequest extends Document {\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  logs: IlogData;\n\n  @Prop({ type: Types.ObjectId, ref: 'WebClient'} )\n  webclient: WebClient;\n  \n  @Prop()\n  created_at: Date;\n}\n\nexport const LogRequestSchema = SchemaFactory.createForClass(LogRequest);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/login-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LogrequestController.html":{"url":"controllers/LogrequestController.html","title":"controller - LogrequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LogrequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logrequest/logrequest.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logrequest\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getLogRequestsByWebClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLogRequestsByWebClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogRequestsByWebClient(webClientId, res, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':webClientId')\n                \n            \n\n            \n                \n                    Defined in src/logrequest/logrequest.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    webClientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards,Request, Get, HttpStatus, Param, Res } from '@nestjs/common';\nimport { AuthGuard } from 'src/guard/auth.guard';\nimport { LogrequestService } from './logrequest.service';\n\n@Controller('logrequest')\n@UseGuards(AuthGuard)\nexport class LogrequestController {\n\n    constructor(private readonly logrequestService: LogrequestService) {}\n\n    @Get(':webClientId')\n  async getLogRequestsByWebClient(@Param('webClientId') webClientId,@Res() res,@Request() req) {\n    const logRequets = await this.logrequestService.findBWebClient(req.user.organization,webClientId);\n    return res.status(HttpStatus.OK).json(logRequets);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogrequestModule.html":{"url":"modules/LogrequestModule.html","title":"module - LogrequestModule","body":"\n                   \n\n\n\n\n    Modules\n    LogrequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LogrequestModule\n\n\n\ncluster_LogrequestModule_providers\n\n\n\n\nLogrequestService\n\nLogrequestService\n\n\n\nLogrequestModule\n\nLogrequestModule\n\nLogrequestModule -->\n\nLogrequestService->LogrequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logrequest/logrequest.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogrequestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LogrequestController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LogRequest, LogRequestSchema } from 'src/schemas/logRequest.schema';\nimport { WebClient, WebClientSchema } from 'src/schemas/webClient.schema';\nimport { WorkSpace, WorkSpaceSchema } from 'src/schemas/workspace.schema';\nimport { LogrequestController } from './logrequest.controller';\nimport { LogrequestService } from './logrequest.service';\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name: WebClient.name, schema:WebClientSchema },{ name: LogRequest.name, schema:LogRequestSchema },{ name: WorkSpace.name, schema:WorkSpaceSchema }])],\n  controllers: [LogrequestController],\n  providers: [LogrequestService]\n})\nexport class LogrequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogrequestService.html":{"url":"injectables/LogrequestService.html","title":"injectable - LogrequestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogrequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logrequest/logrequest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findBWebClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webClientModel: Model, logRequestModel: Model, workSpaceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/logrequest/logrequest.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webClientModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logRequestModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workSpaceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findBWebClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBWebClient(organization: Types.ObjectId, webClientId: Types.ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/logrequest/logrequest.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organization\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    webClientId\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { LogRequest } from 'src/schemas/logRequest.schema';\nimport { WebClient } from 'src/schemas/webClient.schema';\nimport { WorkSpace } from 'src/schemas/workspace.schema';\n\n@Injectable()\nexport class LogrequestService {\n\n    constructor(@InjectModel(WebClient.name) private readonly webClientModel: Model,\n    @InjectModel(LogRequest.name) private readonly logRequestModel: Model,\n    @InjectModel(WorkSpace.name) private readonly workSpaceModel: Model,\n) {}\n\n        async findBWebClient(organization: Types.ObjectId,webClientId:Types.ObjectId ): Promise {\n            let workspace = await this.workSpaceModel.findById(organization).exec();\n           let webClient = await this.webClientModel.findById(webClientId).exec();\n           return await this.logRequestModel.find({webclient:webClient._id})\n           .populate('webclient')\n            .exec();\n            //,'webclient.workSpace':workspace._id { $elemMatch: { 'workSpace': workspace._id } }\n            //,'webclient.workSpace':workspace._id\n            //  return await this.logRequestModel.find({webclient:webClient._id})\n\n        }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConfig.html":{"url":"classes/ServerConfig.html","title":"class - ServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/serverConfig.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config_file\n                            \n                            \n                                config_file_tracker\n                            \n                            \n                                created_at\n                            \n                            \n                                folder_config\n                            \n                            \n                                folder_config_tracker\n                            \n                            \n                                is_configured\n                            \n                            \n                                is_deleted\n                            \n                            \n                                name\n                            \n                            \n                                server_type\n                            \n                            \n                                workSpace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config_file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config_file_tracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder_config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            folder_config_tracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_configured\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workSpace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WorkSpace\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'WorkSpace'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/serverConfig.schema.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport {  Document, Types } from 'mongoose';\nimport { WorkSpace, WorkSpaceSchema } from './workspace.schema';\n\n\n@Schema()\nexport class ServerConfig extends Document {\n  @Prop()\n  name: string;\n\n  @Prop()\n  config_file: string;\n\n  @Prop()\n  config_file_tracker: string;\n\n  @Prop()\n  folder_config: string;\n\n  @Prop()\n  folder_config_tracker: string;\n\n  @Prop()\n  is_configured: Boolean;\n\n  @Prop()\n  is_deleted: Boolean;\n\n  @Prop()\n  server_type: string;\n\n  @Prop({ type: Types.ObjectId, ref: 'WorkSpace'} )\n  workSpace:WorkSpace;\n\n  @Prop()\n  created_at: Date;\n}\n\nexport const ServerConfigSchema = SchemaFactory.createForClass(ServerConfig);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerConfigController.html":{"url":"controllers/ServerConfigController.html","title":"controller - ServerConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server-config/server-config.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                server\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getServerbyId\n                            \n                            \n                                    Async\n                                getServers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getServerbyId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getServerbyId(id, res, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/server-config/server-config.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getServers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getServers(res, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')\n                \n            \n\n            \n                \n                    Defined in src/server-config/server-config.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Res,Request, UseGuards, Param } from '@nestjs/common';\nimport { AuthGuard } from 'src/guard/auth.guard';\nimport { ServerConfigService } from './server-config.service';\n\n\n@Controller('server')\n@UseGuards(AuthGuard)\nexport class ServerConfigController {\n\n    constructor(private readonly serverConfigService: ServerConfigService) {}\n\n    @Get('')\n  async getServers(@Res() res,@Request() req) {\n    const servers = await this.serverConfigService.findByWorkSpace(req.user.organization);\n    return res.status(HttpStatus.OK).json(servers);\n  }\n\n  @Get(':id')\n  async getServerbyId(@Param('id') id,@Res() res,@Request() req) {\n    const server = await this.serverConfigService.findById(req.user.organization,id);\n\n    return res.status(HttpStatus.OK).json(server ? server : []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConfigModule.html":{"url":"modules/ServerConfigModule.html","title":"module - ServerConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerConfigModule\n\n\n\ncluster_ServerConfigModule_providers\n\n\n\n\nServerConfigService\n\nServerConfigService\n\n\n\nServerConfigModule\n\nServerConfigModule\n\nServerConfigModule -->\n\nServerConfigService->ServerConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/server-config/server-config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServerConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServerConfigController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServerConfigService } from './server-config.service';\nimport { ServerConfigController } from './server-config.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ServerConfig, ServerConfigSchema } from 'src/schemas/serverConfig.schema';\nimport { WorkSpace, WorkSpaceSchema } from 'src/schemas/workspace.schema';\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name: ServerConfig.name, schema:ServerConfigSchema },{ name: WorkSpace.name, schema:WorkSpaceSchema }])],\n  providers: [ServerConfigService],\n  controllers: [ServerConfigController]\n})\nexport class ServerConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerConfigService.html":{"url":"injectables/ServerConfigService.html","title":"injectable - ServerConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server-config/server-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByWorkSpace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serverConfig: Model, workSpaceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/server-config/server-config.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serverConfig\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workSpaceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(organization: Types.ObjectId, id: Types.ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/server-config/server-config.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organization\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByWorkSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByWorkSpace(organization: Types.ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/server-config/server-config.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organization\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { ServerConfig } from 'src/schemas/serverConfig.schema';\nimport { WorkSpace } from 'src/schemas/workspace.schema';\n\n@Injectable()\nexport class ServerConfigService {\n\n    constructor(@InjectModel(ServerConfig.name) private readonly serverConfig: Model,\n    @InjectModel(WorkSpace.name) private readonly workSpaceModel: Model,\n) {}\n\n        async findByWorkSpace(organization: Types.ObjectId): Promise {\n            let workspace = await this.workSpaceModel.findById(organization).exec();\n            return await this.serverConfig.find({workSpace:workspace._id}).populate('workSpace').exec();\n        }\n\n        async findById(organization: Types.ObjectId,id:Types.ObjectId): Promise {\n            let workspace = await this.workSpaceModel.findById(organization).exec();\n            return await this.serverConfig.findOne({workSpace:workspace._id,_id:id}).populate('workSpace').exec();\n        }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                is_active\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                            \n                                workSpace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/user.schema.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/user.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ROLES\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/user.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/user.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workSpace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WorkSpace\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: WorkSpaceSchema})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/user.schema.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { ROLES } from 'src/utils/roles.enum';\nimport { WorkSpaceSchema, WorkSpace } from './workspace.schema';\n\n\n@Schema()\nexport class User  extends Document  {\n  @Prop()\n  username: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  role: ROLES;\n\n  @Prop({ type: WorkSpaceSchema })\n  workSpace: WorkSpace;\n\n  @Prop()\n  created_at: Date;\n \n  \n  @Prop()\n  is_active: Boolean;\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { User } from 'src/schemas/user.schema';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UserService } from './user.service';\n\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto) {\n    await this.userService.create(createUserDto);\n  }\n\n  @Get()\n  async findAll(): Promise {\n    return this.userService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { User, UserSchema } from 'src/schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { WorkSpace, WorkSpaceSchema } from 'src/schemas/workspace.schema';\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name: User.name, schema: UserSchema },{ name: WorkSpace.name, schema: WorkSpaceSchema }])],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getUserToLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, workSpaceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workSpaceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserToLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserToLogin(loginInfo: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from 'src/schemas/user.schema';\nimport { WorkSpace } from 'src/schemas/workspace.schema';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { LoginDto } from './dto/login-user.dto';\nconst bcrypt = require('bcrypt');\n\n@Injectable()\nexport class UserService {\n\n    constructor(@InjectModel(User.name) private readonly userModel: Model,\n                @InjectModel(WorkSpace.name) private readonly workSpaceModel: Model,\n    ) {}\n\n    async create(createUserDto: CreateUserDto): Promise {\n        let workspace = await this.workSpaceModel.findById(createUserDto.workSpace).exec();\n        createUserDto.workSpace  = workspace;\n        createUserDto.password  =  await bcrypt.hashSync(createUserDto.password,parseInt(process.env.hashPass))\n        const createdUser = new this.userModel(createUserDto);\n        return await createdUser.save();\n      }\n    \n    async findAll(): Promise {\n        return await this.userModel.find().exec();\n      }\n    \n    async findById(id:any): Promise {\n        return await this.userModel.findById(id).exec();\n      }\n    \n    async getUserToLogin(loginInfo:LoginDto): Promise {\n        return await this.userModel.findOne({username:loginInfo.username}).exec();\n      }\n    \n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebClient.html":{"url":"classes/WebClient.html","title":"class - WebClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/webClient.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conf_tracker_file\n                            \n                            \n                                created_at\n                            \n                            \n                                domain\n                            \n                            \n                                ip_client\n                            \n                            \n                                is_configured\n                            \n                            \n                                is_deleted\n                            \n                            \n                                lastline\n                            \n                            \n                                logFile\n                            \n                            \n                                name\n                            \n                            \n                                path_log_folder\n                            \n                            \n                                server\n                            \n                            \n                                server_name\n                            \n                            \n                                virtual_host_file\n                            \n                            \n                                workSpace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conf_tracker_file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ip_client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_configured\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_deleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path_log_folder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ServerConfig\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'ServerConfig'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            virtual_host_file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workSpace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WorkSpace\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'WorkSpace'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/webClient.schema.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { ServerConfigSchema, ServerConfig } from './serverConfig.schema';\nimport { WorkSpace, WorkSpaceSchema } from './workspace.schema';\n\n\n@Schema()\nexport class WebClient extends Document {\n  @Prop()\n  name: string;\n\n  @Prop()\n  domain: string;\n\n  @Prop()\n  ip_client: string;\n\n  @Prop()\n  lastline: number;\n\n  @Prop()\n  virtual_host_file: string;\n\n  @Prop()\n  path_log_folder: string;\n\n  @Prop()\n  conf_tracker_file: string;\n\n  @Prop()\n  is_configured: boolean;\n\n  @Prop()\n  is_deleted: boolean;\n\n  @Prop()\n  logFile: string;\n\n  @Prop()\n  server_name: string;\n\n  @Prop({ type: Types.ObjectId, ref: 'WorkSpace'} )\n  workSpace:WorkSpace;\n\n  @Prop({ type: Types.ObjectId, ref: 'ServerConfig'} )\n  server: ServerConfig;\n  \n  @Prop()\n  created_at: Date;\n}\n\nexport const WebClientSchema = SchemaFactory.createForClass(WebClient);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WebclientController.html":{"url":"controllers/WebclientController.html","title":"controller - WebclientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WebclientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/webclient/webclient.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                webclient\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getServerbyId\n                            \n                            \n                                    Async\n                                getWebClients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getServerbyId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getServerbyId(id, res, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/webclient/webclient.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getWebClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWebClients(res, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')\n                \n            \n\n            \n                \n                    Defined in src/webclient/webclient.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Param, Res,Request, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from 'src/guard/auth.guard';\nimport { WebclientService } from './webclient.service';\n\n@Controller('webclient')\n@UseGuards(AuthGuard)\nexport class WebclientController {\n\n    constructor(private readonly webclientService: WebclientService) {}\n\n    @Get('')\n  async getWebClients(@Res() res,@Request() req) {\n    const webClients = await this.webclientService.findByWorkSpace(req.user.organization);\n    return res.status(HttpStatus.OK).json(webClients);\n  }\n\n  @Get(':id')\n  async getServerbyId(@Param('id') id,@Res() res,@Request() req) {\n    const webClient = await this.webclientService.findById(req.user.organization,id);\n\n    return res.status(HttpStatus.OK).json(webClient ? webClient : []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebclientModule.html":{"url":"modules/WebclientModule.html","title":"module - WebclientModule","body":"\n                   \n\n\n\n\n    Modules\n    WebclientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebclientModule\n\n\n\ncluster_WebclientModule_providers\n\n\n\n\nWebclientService\n\nWebclientService\n\n\n\nWebclientModule\n\nWebclientModule\n\nWebclientModule -->\n\nWebclientService->WebclientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/webclient/webclient.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WebclientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WebclientController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WebclientService } from './webclient.service';\nimport { WebclientController } from './webclient.controller';\nimport { WebClient, WebClientSchema } from 'src/schemas/webClient.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { WorkSpace, WorkSpaceSchema } from 'src/schemas/workspace.schema';\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name: WebClient.name, schema:WebClientSchema },{ name: WorkSpace.name, schema:WorkSpaceSchema }])],\n  providers: [WebclientService],\n  controllers: [WebclientController]\n})\nexport class WebclientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebclientService.html":{"url":"injectables/WebclientService.html","title":"injectable - WebclientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebclientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/webclient/webclient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByWorkSpace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webClient: Model, workSpaceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/webclient/webclient.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webClient\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workSpaceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(organization: Types.ObjectId, id: Types.ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/webclient/webclient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organization\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByWorkSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByWorkSpace(organization: Types.ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/webclient/webclient.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organization\n                                    \n                                            Types.ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { ServerConfig } from 'src/schemas/serverConfig.schema';\nimport { WebClient } from 'src/schemas/webClient.schema';\nimport { WorkSpace } from 'src/schemas/workspace.schema';\n\n@Injectable()\nexport class WebclientService {\n\n    constructor(@InjectModel(WebClient.name) private readonly webClient: Model,\n    @InjectModel(WorkSpace.name) private readonly workSpaceModel: Model,\n) {}\n\n        async findByWorkSpace(organization: Types.ObjectId): Promise {\n            let workspace = await this.workSpaceModel.findById(organization).exec();\n            return await this.webClient.find({workSpace:workspace._id})\n            .populate('workSpace')\n            .populate('server')\n            .exec();\n        }\n\n        async findById(organization: Types.ObjectId,id:Types.ObjectId): Promise {\n            let workspace = await this.workSpaceModel.findById(organization).exec();\n            return await this.webClient.findOne({workSpace:workspace._id,_id:id})\n            .populate('workSpace')\n            .populate('server')\n            .exec();\n        }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkSpace.html":{"url":"classes/WorkSpace.html","title":"class - WorkSpace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkSpace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/workspace.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/workspace.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/schemas/workspace.schema.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type WorkSpaceDocument = WorkSpace & Document;\n\n@Schema()\nexport class WorkSpace extends Document  {\n  @Prop()\n  name: string;\n\n  @Prop()\n  created_at: Date;\n}\n\nexport const WorkSpaceSchema = SchemaFactory.createForClass(WorkSpace);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/interfaces/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guard/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/logrequest/logrequest.controller.ts\n            \n            controller\n            LogrequestController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/logrequest/logrequest.service.ts\n            \n            injectable\n            LogrequestService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/logRequest.schema.ts\n            \n            class\n            LogRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/schemas/logRequest.schema.ts\n            \n            variable\n            LogRequestSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/serverConfig.schema.ts\n            \n            class\n            ServerConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/schemas/serverConfig.schema.ts\n            \n            variable\n            ServerConfigSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/webClient.schema.ts\n            \n            class\n            WebClient\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/schemas/webClient.schema.ts\n            \n            variable\n            WebClientSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/schemas/workspace.schema.ts\n            \n            class\n            WorkSpace\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/schemas/workspace.schema.ts\n            \n            variable\n            WorkSpaceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/server-config/server-config.controller.ts\n            \n            controller\n            ServerConfigController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/server-config/server-config.service.ts\n            \n            injectable\n            ServerConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/IlogData.ts\n            \n            interface\n            IlogData\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/webclient/webclient.controller.ts\n            \n            controller\n            WebclientController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/webclient/webclient.service.ts\n            \n            injectable\n            WebclientService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.10.8\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ROLES   (src/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ROLES\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SuperAdmin\n                            \n                        \n                        \n                            \n                                 COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : CompanyAdmin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogrequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebclientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LogrequestModule\n\n\n\ncluster_LogrequestModule_providers\n\n\n\ncluster_ServerConfigModule\n\n\n\ncluster_ServerConfigModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_WebclientModule\n\n\n\ncluster_WebclientModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLogrequestModule\n\nLogrequestModule\n\nAppModule -->\n\nLogrequestModule->AppModule\n\n\n\n\n\nServerConfigModule\n\nServerConfigModule\n\nAppModule -->\n\nServerConfigModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nWebclientModule\n\nWebclientModule\n\nAppModule -->\n\nWebclientModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLogrequestService\n\nLogrequestService\n\nLogrequestModule -->\n\nLogrequestService->LogrequestModule\n\n\n\n\n\nServerConfigService\n\nServerConfigService\n\nServerConfigModule -->\n\nServerConfigService->ServerConfigModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nWebclientService\n\nWebclientService\n\nWebclientModule -->\n\nWebclientService->WebclientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WorkSpaceDocument   (src/.../workspace.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/workspace.schema.ts\n    \n    \n        \n            \n                \n                    \n                    WorkSpaceDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (src/.../auth.service.ts)\n                        \n                        \n                            bcrypt   (src/.../user.service.ts)\n                        \n                        \n                            LogRequestSchema   (src/.../logRequest.schema.ts)\n                        \n                        \n                            ServerConfigSchema   (src/.../serverConfig.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            WebClientSchema   (src/.../webClient.schema.ts)\n                        \n                        \n                            WorkSpaceSchema   (src/.../workspace.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bcrypt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('bcrypt')\n                        \n                    \n\n\n            \n        \n\n    src/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bcrypt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('bcrypt')\n                        \n                    \n\n\n            \n        \n\n    src/schemas/logRequest.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LogRequestSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(LogRequest)\n                        \n                    \n\n\n            \n        \n\n    src/schemas/serverConfig.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ServerConfigSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(ServerConfig)\n                        \n                    \n\n\n            \n        \n\n    src/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n    src/schemas/webClient.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WebClientSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(WebClient)\n                        \n                    \n\n\n            \n        \n\n    src/schemas/workspace.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WorkSpaceSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(WorkSpace)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
